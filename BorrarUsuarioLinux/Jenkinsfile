pipeline {
    agent any
    parameters {
        string(name: 'USER_UID', defaultValue: '', description: 'UID of the user to delete')
    }
    stages {
        stage('List Users Before Deletion') {
            steps {
                script {
                    sh 'awk -F: \'$3 >= 1000 && $3 < 60000 {print $0}\' /etc/passwd' 
                    }
                }
            }
        stage('Delete User') {
            steps {
                script {
                    def uid = params.USER_UID
                    if (uid) {
                        // Find the username and primary group
                        def userInfo = sh(script: "getent passwd ${uid}", returnStdout: true).trim()
                        def username = userInfo.split(':')[0]
                        def primaryGroup = userInfo.split(':')[3]

                        // Remove the user and their home directory
                        try {
                            sh "sudo userdel -r ${username}"
                        } catch (Exception e) {
                            echo "Failed to delete user ${username}: ${e.message}"
                        }
                        // Remove the primary group
                        try {
                            sh "sudo groupdel ${primaryGroup}"
                        } catch (Exception e) {
                            echo "Failed to delete group ${primaryGroup}: ${e.message}"
                        }
                        echo "User ${username} and their primary group ${primaryGroup} have been deleted successfully"
                    } else {
                        echo "No UID provided"
                    }
                }
            }
        }
        stage('List Users After Deletion') {
            steps {
                script {
                    sh 'awk -F: \'$3 >= 1000 && $3 < 60000 {print $0}\' /etc/passwd' 
                    }
                }
            }
        }
    }